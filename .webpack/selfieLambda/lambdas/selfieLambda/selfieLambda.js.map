{"version":3,"file":"lambdas/selfieLambda/selfieLambda.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzljJA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AEvBA;AACA;AACA;AACA","sources":["webpack://photodrop/./db.ts","webpack://photodrop/./lambdas/selfieLambda/selfieLambda.ts","webpack://photodrop/./models/model.ts","webpack://photodrop/external commonjs \"aws-sdk\"","webpack://photodrop/external commonjs \"dotenv\"","webpack://photodrop/external commonjs \"dotenv/config\"","webpack://photodrop/external commonjs \"jimp/es\"","webpack://photodrop/external commonjs \"pg\"","webpack://photodrop/external commonjs \"sequelize\"","webpack://photodrop/webpack/bootstrap","webpack://photodrop/webpack/before-startup","webpack://photodrop/webpack/startup","webpack://photodrop/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst dotenv_1 = __importDefault(require(\"dotenv\"));\r\nconst pg = __importStar(require(\"pg\"));\r\nconst sequelize_1 = require(\"sequelize\");\r\ndotenv_1.default.config();\r\nconst sequelize = new sequelize_1.Sequelize(process.env.DB_NAME, process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n    host: process.env.DB_HOST,\r\n    port: Number(process.env.DB_PORT),\r\n    dialect: 'postgres',\r\n    dialectModule: pg,\r\n    define: {\r\n        timestamps: false,\r\n    },\r\n});\r\nexports.default = sequelize;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"dotenv/config\");\r\nconst aws_sdk_1 = __importDefault(require(\"aws-sdk\"));\r\n// import sharp from 'sharp';\r\nconst es_1 = __importDefault(require(\"jimp/es\"));\r\nconst model_1 = require(\"../../models/model\");\r\n// get reference to S3 client\r\nconst s3 = new aws_sdk_1.default.S3();\r\n// @ts-ignore\r\nconst baseHandler = async (event) => {\r\n    // Get the object from the event and show its content type\r\n    const bucket = event.Records[0].s3.bucket.name;\r\n    const dstBucket = `${bucket}-resized`;\r\n    const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\r\n    const dstKey = key;\r\n    const params = {\r\n        Bucket: bucket,\r\n        Key: key,\r\n    };\r\n    try {\r\n        const data = await s3.getObject(params).promise();\r\n        const metadata = (!data) ? null : data.Metadata;\r\n        if (metadata) {\r\n            const userid = Number(metadata.userid);\r\n            // save selfie info to db\r\n            const urlSelfie = `https://${bucket}.s3.eu-west-1.amazonaws.com/${key}`;\r\n            console.log('METADATA IS: ', metadata.userid);\r\n            try {\r\n                const oldSelfies = await model_1.Selfie.findAll({ where: { appUserId: userid } });\r\n                for (let i = 0; i < oldSelfies.length; i += 1) {\r\n                    oldSelfies[i].active = false;\r\n                    // eslint-disable-next-line no-await-in-loop\r\n                    await oldSelfies[i].save();\r\n                }\r\n                const selfie = await model_1.Selfie.create({\r\n                    name: key, selfieUrl: urlSelfie, active: true, appUserId: userid,\r\n                });\r\n                console.log('Selfie is: ', selfie);\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n                return;\r\n            }\r\n            // Infer the image type from the file suffix.\r\n            const typeMatch = key.match(/\\.([^.]*)$/);\r\n            if (!typeMatch) {\r\n                console.log('Could not determine the image type.');\r\n                return;\r\n            }\r\n            // Check that the image type is supported\r\n            const imageType = typeMatch[1].toLowerCase();\r\n            if (imageType !== 'jpg' && imageType !== 'png' && imageType !== 'jpeg') {\r\n                console.log(`Unsupported image type: ${imageType}`);\r\n                return;\r\n            }\r\n            // Download the image from the S3 source bucket.\r\n            let origimage;\r\n            try {\r\n                // eslint-disable-next-line no-shadow\r\n                const params = {\r\n                    Bucket: bucket,\r\n                    Key: key,\r\n                };\r\n                // eslint-disable-next-line vars-on-top, no-var\r\n                origimage = await s3.getObject(params).promise();\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n            // set thumbnail width. Resize will set the height automatically to maintain aspect ratio.\r\n            const height = 250;\r\n            // Use the sharp module to resize the image and save in a buffer.\r\n            let buffer;\r\n            try {\r\n                console.log('is buffer: ', Buffer.isBuffer(origimage.Body));\r\n                // @ts-ignore\r\n                // buffer = await sharp(origimage.Body).resize(width).toBuffer();\r\n                buffer = await es_1.default.read(origimage.Body).then((image) => {\r\n                    const resizedImage = image\r\n                        .resize(es_1.default.AUTO, height)\r\n                        .quality(100) // set JPEG quality\r\n                        .getBufferAsync(es_1.default.MIME_JPEG);\r\n                    return resizedImage;\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n            // Upload the thumbnail image to the destination bucket\r\n            try {\r\n                const destparams = {\r\n                    Bucket: dstBucket,\r\n                    Key: dstKey,\r\n                    Body: buffer,\r\n                    ContentType: 'image',\r\n                };\r\n                const putResult = await s3.putObject(destparams).promise();\r\n                if (putResult) {\r\n                    try {\r\n                        // save resized photo info to db\r\n                        const urlSelfieMini = `https://${dstBucket}.s3.eu-west-1.amazonaws.com/${dstKey}`;\r\n                        const oldSelfies = await model_1.SelfieMini.findAll({ where: { appUserId: userid } });\r\n                        for (let i = 0; i < oldSelfies.length; i += 1) {\r\n                            oldSelfies[i].active = false;\r\n                            // eslint-disable-next-line no-await-in-loop\r\n                            await oldSelfies[i].save();\r\n                        }\r\n                        try {\r\n                            await model_1.SelfieMini.create({\r\n                                name: dstKey, selfieUrl: urlSelfieMini, active: true, appUserId: userid,\r\n                            });\r\n                        }\r\n                        catch (e) {\r\n                            console.log(e);\r\n                            return;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.log(e);\r\n                        return;\r\n                    }\r\n                    console.log(`Successfully resized ${bucket}/${key} and uploaded to ${dstBucket}/${dstKey}`);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\r\n        console.log(message);\r\n        throw new Error(message);\r\n    }\r\n};\r\n// @ts-ignore\r\nconst handler = baseHandler;\r\nmodule.exports.handler = handler;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UserAlbum = exports.Photo_Person = exports.SelfieMini = exports.Selfie = exports.AppUser = exports.Person = exports.PhotoMiniWaterMark = exports.PhotoMini = exports.Photo = exports.Album = exports.Photographer = void 0;\r\nconst sequelize_1 = require(\"sequelize\"); // с помощью DataTypes описываются типы поля(String, Int,  Array ect.)\r\nconst db_1 = __importDefault(require(\"../db\"));\r\n// Photographer\r\nconst Photographer = db_1.default.define('photographer', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    login: {\r\n        type: sequelize_1.DataTypes.STRING,\r\n        allowNull: false,\r\n        unique: true,\r\n    },\r\n    password: { type: sequelize_1.DataTypes.STRING, allowNull: false },\r\n    email: { type: sequelize_1.DataTypes.STRING },\r\n    fullName: { type: sequelize_1.DataTypes.STRING },\r\n});\r\nexports.Photographer = Photographer;\r\n// Album\r\nconst Album = db_1.default.define('album', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING, allowNull: false },\r\n    location: { type: sequelize_1.DataTypes.STRING, allowNull: false },\r\n    date: { type: sequelize_1.DataTypes.DATE, allowNull: false },\r\n    photographerId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.Album = Album;\r\n// Photo\r\nconst Photo = db_1.default.define('photo', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    photoUrl: { type: sequelize_1.DataTypes.STRING },\r\n    photographerId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n    albumId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.Photo = Photo;\r\n// PhotoMini\r\nconst PhotoMini = db_1.default.define('photoMini', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    photoMiniUrl: { type: sequelize_1.DataTypes.STRING },\r\n    photographerId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n    albumId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.PhotoMini = PhotoMini;\r\n// PhotoMiniWaterMark\r\nconst PhotoMiniWaterMark = db_1.default.define('photoMiniWaterMark', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    photoMiniWaterMarkUrl: { type: sequelize_1.DataTypes.STRING },\r\n    photographerId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n    albumId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.PhotoMiniWaterMark = PhotoMiniWaterMark;\r\n// Person\r\nconst Person = db_1.default.define('person', {\r\n    id: {\r\n        type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true,\r\n    },\r\n    phone: { type: sequelize_1.DataTypes.STRING, unique: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n});\r\nexports.Person = Person;\r\n// Appuser\r\nconst AppUser = db_1.default.define('appUser', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    phone: { type: sequelize_1.DataTypes.STRING, unique: true },\r\n    email: { type: sequelize_1.DataTypes.STRING, unique: true },\r\n    textMessagesNotification: { type: sequelize_1.DataTypes.BOOLEAN },\r\n    emailNotification: { type: sequelize_1.DataTypes.BOOLEAN },\r\n    unsubscribe: { type: sequelize_1.DataTypes.BOOLEAN },\r\n});\r\nexports.AppUser = AppUser;\r\n// Selfie\r\nconst Selfie = db_1.default.define('selfie', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    selfieUrl: { type: sequelize_1.DataTypes.STRING },\r\n    active: { type: sequelize_1.DataTypes.BOOLEAN },\r\n    appUserId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.Selfie = Selfie;\r\n// SelfieMini\r\nconst SelfieMini = db_1.default.define('selfieMini', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    name: { type: sequelize_1.DataTypes.STRING },\r\n    selfieUrl: { type: sequelize_1.DataTypes.STRING },\r\n    active: { type: sequelize_1.DataTypes.BOOLEAN },\r\n    appUserId: { type: sequelize_1.DataTypes.INTEGER, allowNull: false },\r\n});\r\nexports.SelfieMini = SelfieMini;\r\n// UserAlbum\r\nconst UserAlbum = db_1.default.define('userAlbum', {\r\n    id: { type: sequelize_1.DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n    userId: { type: sequelize_1.DataTypes.INTEGER },\r\n    userName: { type: sequelize_1.DataTypes.STRING },\r\n    albumId: { type: sequelize_1.DataTypes.INTEGER },\r\n    isPaid: { type: sequelize_1.DataTypes.BOOLEAN },\r\n});\r\nexports.UserAlbum = UserAlbum;\r\n// Photo_Person\r\nconst Photo_Person = db_1.default.define('Photo_Person', {\r\n    photoId: { type: sequelize_1.DataTypes.INTEGER },\r\n    personId: { type: sequelize_1.DataTypes.INTEGER },\r\n});\r\nexports.Photo_Person = Photo_Person;\r\n// Photographer & Album\r\nPhotographer.hasMany(Album, {\r\n    sourceKey: 'id',\r\n    foreignKey: 'photographerId',\r\n    as: 'albums',\r\n});\r\nAlbum.belongsTo(Photographer, {\r\n    foreignKey: 'photographerId',\r\n    as: 'photographer',\r\n});\r\n// Photographer & Photo\r\nPhotographer.hasMany(Photo, {\r\n    sourceKey: 'id',\r\n    foreignKey: 'photographerId',\r\n    as: 'photos',\r\n});\r\nPhoto.belongsTo(Photographer, {\r\n    foreignKey: 'photographerId',\r\n    as: 'photographer',\r\n});\r\nPhotographer.hasMany(PhotoMini);\r\nPhotoMini.belongsTo(Photographer);\r\nPhotographer.hasMany(PhotoMiniWaterMark);\r\nPhotoMiniWaterMark.belongsTo(Photographer);\r\nAlbum.hasMany(Photo);\r\nPhoto.belongsTo(Album);\r\nAlbum.hasMany(PhotoMini);\r\nPhotoMini.belongsTo(Album);\r\nAlbum.hasMany(PhotoMiniWaterMark);\r\nPhotoMiniWaterMark.belongsTo(Album);\r\nPhoto.belongsToMany(Person, { through: 'Photo_Person' });\r\nPerson.belongsToMany(Photo, { through: 'Photo_Person' });\r\nAppUser.hasMany(Selfie);\r\nSelfie.belongsTo(AppUser);\r\nAppUser.hasMany(SelfieMini);\r\nSelfieMini.belongsTo(AppUser);\r\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"dotenv\");","module.exports = require(\"dotenv/config\");","module.exports = require(\"jimp/es\");","module.exports = require(\"pg\");","module.exports = require(\"sequelize\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./lambdas/selfieLambda/selfieLambda.ts\");\n",""],"names":[],"sourceRoot":""}